name: web
on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/web.yml"
      - "web/**"

env:
  PROJECT: web
  ECR_REPOSITORY: web
jobs:
  build-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $PROJECT
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Deploy static content in CDN
        env:
          S3_BUCKET: ${{ secrets.AWS_S3_CDN_CONTENT_BUCKET }}
        run: aws s3 sync ./$PROJECT/public/ s3://$S3_BUCKET
      - name: Download task definition
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          # TODO: After moving out from mono-repo task name can be deployed via terraform
          TASK_DEFINITION : dev-task-${{ env.ECR_REPOSITORY}}-${{ secrets.AWS_REGION }}
        run: |
          aws ecs describe-task-definition --task-definition $TASK_DEFINITION \
          --query taskDefinition > task-definition.json
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.ECR_REPOSITORY }}
          image: ${{ steps.build-image.outputs.image }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: service-${{ env.ECR_REPOSITORY }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: false
